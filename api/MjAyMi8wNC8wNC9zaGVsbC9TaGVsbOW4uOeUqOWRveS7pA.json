{"title":"Shell 常用命令","date":"2022-04-04T18:00:00.000Z","date_formatted":{"ll":"Apr 4, 2022","L":"04/04/2022","MM-DD":"04-04"},"thumbnail":"img/coding-1.jpeg","color":"#111","link":"2022/04/04/shell/Shell常用命令","comments":true,"tags":["Linux"],"categories":["技术笔记"],"updated":"2022-04-04T14:16:50.576Z","content":"<blockquote>\n<p>Linux常用的shell命令</p>\n</blockquote>\n<span id=\"more\"></span>\n<h4 id=\"定义脚本外参数\">定义脚本外参数<a title=\"#定义脚本外参数\" href=\"#定义脚本外参数\"></a></h4>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">#!/bin/bash</span><br><span class=\"line\"># 如：./shell.sh 参数1 参数2</span><br><span class=\"line\">var1=$1</span><br><span class=\"line\">var2=$2</span><br></pre></td></tr></table></figure>\n<h4 id=\"判断命令执行是否成功\">判断命令执行是否成功<a title=\"#判断命令执行是否成功\" href=\"#判断命令执行是否成功\"></a></h4>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">#!/bin/bash</span><br><span class=\"line\">docker load -i $&#123;service&#125;.tar</span><br><span class=\"line\">if [ $? -ne 0 ]; then</span><br><span class=\"line\">    echo &quot;failed load $&#123;service&#125;&quot; &gt;&gt; loadImage.txt</span><br><span class=\"line\">else</span><br><span class=\"line\">    echo &quot;succeed load $&#123;service&#125;&quot; &gt;&gt; loadImage.txt</span><br><span class=\"line\">fi</span><br></pre></td></tr></table></figure>\n<h4 id=\"定义数组\">定义数组<a title=\"#定义数组\" href=\"#定义数组\"></a></h4>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">service_array=(data1 data2)</span><br><span class=\"line\">for service in $&#123;service_array[@]&#125;</span><br><span class=\"line\">do</span><br><span class=\"line\">    echo &quot; 【$&#123;service&#125;】 服务&quot;</span><br><span class=\"line\">done</span><br></pre></td></tr></table></figure>\n<h4 id=\"获取命令执行返回的第几列\">获取命令执行返回的第几列<a title=\"#获取命令执行返回的第几列\" href=\"#获取命令执行返回的第几列\"></a></h4>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"># 获取并赋值</span><br><span class=\"line\"># service_pod_ids=(data1 data2 data2)</span><br><span class=\"line\">service_pod_ids=$(echo `kubectl get pods -n light |grep $&#123;service&#125; |awk &#x27;&#123;print $1&quot; &quot;&#125;&#x27;`)</span><br><span class=\"line\"># 获取到数组第一位数 </span><br><span class=\"line\"># service_pod_id_1=data1</span><br><span class=\"line\">service_pod_id_1=$(echo $service_pod_ids |awk &#x27;&#123;print $1&#125;&#x27;)</span><br></pre></td></tr></table></figure>\n<h4 id=\"远程到其它服务器执行命令\">远程到其它服务器执行命令<a title=\"#远程到其它服务器执行命令\" href=\"#远程到其它服务器执行命令\"></a></h4>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sshpass -p &quot;$&#123;password&#125;&quot; ssh -o StrictHostKeyChecking=no root@$&#123;ip&#125; &quot;echo &#x27;命令&#x27;&quot;</span><br></pre></td></tr></table></figure>\n<h4 id=\"等待执行\">等待执行<a title=\"#等待执行\" href=\"#等待执行\"></a></h4>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">echo &quot;wait 10s&quot;</span><br><span class=\"line\">    d=`date +%s`</span><br><span class=\"line\">    while true</span><br><span class=\"line\">    do</span><br><span class=\"line\">    e=`date +%s`</span><br><span class=\"line\">    f=`expr $e - $d`</span><br><span class=\"line\">    echo $f</span><br><span class=\"line\">    if [ $f -gt 10 ];then</span><br><span class=\"line\">        break</span><br><span class=\"line\">    fi</span><br><span class=\"line\">    sleep 10</span><br><span class=\"line\">    done</span><br></pre></td></tr></table></figure>\n<h4 id=\"创建文件\">创建文件<a title=\"#创建文件\" href=\"#创建文件\"></a></h4>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">touch loadImage.txt</span><br></pre></td></tr></table></figure>\n<h4 id=\"写入文件内容\">写入文件内容<a title=\"#写入文件内容\" href=\"#写入文件内容\"></a></h4>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">echo &quot;failed push $&#123;service&#125;&quot; &gt;&gt; loadImage.txt</span><br></pre></td></tr></table></figure>\n<h4 id=\"授权\">授权<a title=\"#授权\" href=\"#授权\"></a></h4>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">chmod 777 xxx.sh</span><br><span class=\"line\">chmod a+r file</span><br></pre></td></tr></table></figure>\n<p><strong>符号模式</strong></p>\n<p>使用符号模式可以设置多个项目：who（用户类型），operator（操作符）和 permission（权限），每个项目的设置可以用逗号隔开。 命令 chmod 将修改 who 指定的用户类型对文件的访问权限，用户类型由一个或者多个字母在 who 的位置来说明，如 who 的符号模式表所示:</p>\n<div class=\"φbq\"><div class=\"φbs\"><table><thead>\n<tr>\n<th>who</th>\n<th>用户类型</th>\n<th>说明</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>u</td>\n<td>user</td>\n<td>文件所有者</td>\n</tr>\n<tr>\n<td>g</td>\n<td>group</td>\n<td>文件所有者所在组</td>\n</tr>\n<tr>\n<td>o</td>\n<td>others</td>\n<td>所有其他用户</td>\n</tr>\n<tr>\n<td>a</td>\n<td>all</td>\n<td>所用用户, 相当于 <em>ugo</em></td>\n</tr>\n</tbody>\n</table></div></div><p>operator 的符号模式表:</p>\n<div class=\"φbq\"><div class=\"φbs\"><table><thead>\n<tr>\n<th>Operator</th>\n<th>说明</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>+</td>\n<td>为指定的用户类型增加权限</td>\n</tr>\n<tr>\n<td>-</td>\n<td>去除指定用户类型的权限</td>\n</tr>\n<tr>\n<td>=</td>\n<td>设置指定用户权限的设置，即将用户类型的所有权限重新设置</td>\n</tr>\n</tbody>\n</table></div></div><p>permission 的符号模式表:</p>\n<div class=\"φbq\"><div class=\"φbs\"><table><thead>\n<tr>\n<th>模式</th>\n<th>名字</th>\n<th>说明</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>r</td>\n<td>读</td>\n<td>设置为可读权限</td>\n</tr>\n<tr>\n<td>w</td>\n<td>写</td>\n<td>设置为可写权限</td>\n</tr>\n<tr>\n<td>x</td>\n<td>执行权限</td>\n<td>设置为可执行权限</td>\n</tr>\n<tr>\n<td>X</td>\n<td>特殊执行权限</td>\n<td>只有当文件为目录文件，或者其他类型的用户有可执行权限时，才将文件权限设置可执行</td>\n</tr>\n<tr>\n<td>s</td>\n<td>setuid/gid</td>\n<td>当文件被执行时，根据who参数指定的用户类型设置文件的setuid或者setgid权限</td>\n</tr>\n<tr>\n<td>t</td>\n<td>粘贴位</td>\n<td>设置粘贴位，只有超级用户可以设置该位，只有文件所有者u可以使用该位</td>\n</tr>\n</tbody>\n</table></div></div><p><strong>八进制语法</strong></p>\n<p>chmod命令可以使用八进制数来指定权限。文件或目录的权限位是由9个权限位来控制，每三位为一组，它们分别是文件所有者（User）的读、写、执行，用户组（Group）的读、写、执行以及其它用户（Other）的读、写、执行。历史上，文件权限被放在一个比特掩码中，掩码中指定的比特位设为1，用来说明一个类具有相应的优先级。</p>\n<div class=\"φbq\"><div class=\"φbs\"><table><thead>\n<tr>\n<th>#</th>\n<th>权限</th>\n<th>rwx</th>\n<th>二进制</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>7</td>\n<td>读 + 写 + 执行</td>\n<td>rwx</td>\n<td>111</td>\n</tr>\n<tr>\n<td>6</td>\n<td>读 + 写</td>\n<td>rw-</td>\n<td>110</td>\n</tr>\n<tr>\n<td>5</td>\n<td>读 + 执行</td>\n<td>r-x</td>\n<td>101</td>\n</tr>\n<tr>\n<td>4</td>\n<td>只读</td>\n<td>r–</td>\n<td>100</td>\n</tr>\n<tr>\n<td>3</td>\n<td>写 + 执行</td>\n<td>-wx</td>\n<td>011</td>\n</tr>\n<tr>\n<td>2</td>\n<td>只写</td>\n<td>-w-</td>\n<td>010</td>\n</tr>\n<tr>\n<td>1</td>\n<td>只执行</td>\n<td>–x</td>\n<td>001</td>\n</tr>\n<tr>\n<td>0</td>\n<td>无</td>\n<td>—</td>\n<td>000</td>\n</tr>\n</tbody>\n</table></div></div><p>例如， 765 将这样解释：</p>\n<ul>\n<li>\n<p>所有者的权限用数字表达：属主的那三个权限位的数字加起来的总和。如 rwx ，也就是 4+2+1 ，应该是 7。</p>\n</li>\n<li>\n<p>用户组的权限用数字表达：属组的那个权限位数字的相加的总和。如 rw- ，也就是 4+2+0 ，应该是 6。</p>\n</li>\n<li>\n<p>其它用户的权限数字表达：其它用户权限位的数字相加的总和。如 r-x ，也就是 4+0+1 ，应该是 5。</p>\n</li>\n</ul>\n<h4 id=\"格式脚本\">格式脚本<a title=\"#格式脚本\" href=\"#格式脚本\"></a></h4>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">dos2unix  service_up.sh</span><br></pre></td></tr></table></figure>\n<h4 id=\"后台运行\">后台运行<a title=\"#后台运行\" href=\"#后台运行\"></a></h4>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">nohup sh xxx.sh &gt;xx.log 2&gt;&amp;1 &amp;</span><br></pre></td></tr></table></figure>\n<h4 id=\"k8s实时显示\">k8s实时显示<a title=\"#k8s实时显示\" href=\"#k8s实时显示\"></a></h4>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">watch kubectl get pods -n light</span><br></pre></td></tr></table></figure>\n<h4 id=\"curl\">curl<a title=\"#curl\" href=\"#curl\"></a></h4>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">curl -s -w &quot;time_connect: %&#123;time_connect&#125;\\ntime_starttransfer: %&#123;time_starttransfer&#125;\\ntime_nslookup:%&#123;time_namelookup&#125;\\ntime_total: %&#123;time_total&#125;\\n&quot; http://iam-gateway.keycloak.svc.cluster.local:8080/managers -H &quot;Host: iam-gateway.keycloak.svc.cluster.local&quot; --header &quot;Authorization: Bearer eyJhbGciOiJSUzI1NiIsInR5cCIgOiAiSldUIiwia2lkIiA6ICJXX0tSNUJJcEJ1dURjZEI4RThxYmdDcjBtUmRyYmZfa0Z0MVB6VTMxNWM0In0.eyJleHAiOjE2MTU0MzE4NDYsImlhdCI6MTYxNTQzMTQyNiwianRpIjoiZGY5NDQ0ZGYtMDg0OS00MmY2LTk0MGUtOGQ4OTVkNGRiY2Y0IiwiaXNzIjoiaHR0cDovL2tleWNsb2FrLWh0dHAua2V5Y2xvYWsuc3ZjLmNsdXN0ZXIubG9jYWwvYXV0aC9yZWFsbXMvYXV0aHoiLCJhdWQiOlsiaWFtIiwiYWNjb3VudCJdLCJzdWIiOiJjZDcyNmNhYS1kMWU2LTQzYjMtYTYxMi1jNmY1YjE5NWJiYWUiLCJ0eXAiOiJCZWFyZXIiLCJhenAiOiJpYW0iLCJzZXNzaW9uX3N0YXRlIjoiZWVmZjk3NTgtMmQ5MC00ZWJjLWEzY2YtNzMwZDRkZGM3YjRmIiwiYWNyIjoiMSIsInJlYWxtX2FjY2VzcyI6eyJyb2xlcyI6WyJvZmZsaW5lX2FjY2VzcyIsInVtYV9hdXRob3JpemF0aW9uIiwicmVhbG0tbWFuYWdlciJdfSwicmVzb3VyY2VfYWNjZXNzIjp7ImFjY291bnQiOnsicm9sZXMiOlsibWFuYWdlLWFjY291bnQiLCJtYW5hZ2UtYWNjb3VudC1saW5rcyIsInZpZXctcHJvZmlsZSJdfX0sInNjb3BlIjoicHJvZmlsZSB0ZW5hbnQgZW1haWwgZ3JvdXAiLCJlbWFpbF92ZXJpZmllZCI6ZmFsc2UsInByZWZlcnJlZF91c2VybmFtZSI6Im1lc2giLCJsb2NhbGUiOiJ6aC1DTiJ9.m5lD8PUNP4aLuVSL_8KnGUSitt0388WK8S5TH63yP7hkYJ3Xc9eG-uw8jemWYrvDjThUFwdg-iGp7j7D8LnHauiLYMamo_5zyFu8ryLJxMHg-d7wWK0EeaEmA5YoM7QLPZ_FgXTFbeBV50k-KTMFJ3yhJw4LdpQL2YxRxrNli7_Omjkz10brtRsKWxR9VpAnoYMcguqAsRIpUa-VGcGz4fiFcrBxlS_lXMmhJGTdtjRSylKE4BLNz8YwWuMkOQi-KSxZqWSUiJ3Brav3vr6WYVYqGGh-Sughr3_kozfXz7lYxiBJjgWuZWa87x4SZiKaXlNn0G6J4MU2TdtFZ1Y31A&quot;</span><br></pre></td></tr></table></figure>\n<h4 id=\"docker-删除none镜像\">docker 删除none镜像<a title=\"#docker-删除none镜像\" href=\"#docker-删除none镜像\"></a></h4>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">docker images |grep none |awk &#x27;&#123;print $3&#125;&#x27;|xargs docker rmi</span><br></pre></td></tr></table></figure>\n<h4 id=\"tail\">tail<a title=\"#tail\" href=\"#tail\"></a></h4>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">tail -f </span><br><span class=\"line\">tail -f100 </span><br></pre></td></tr></table></figure>\n<h4 id=\"查询路由route\">查询路由route<a title=\"#查询路由route\" href=\"#查询路由route\"></a></h4>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">route -n</span><br></pre></td></tr></table></figure>\n<h4 id=\"通过国际公认时间服务同步集群时钟\">通过国际公认时间服务同步集群时钟<a title=\"#通过国际公认时间服务同步集群时钟\" href=\"#通过国际公认时间服务同步集群时钟\"></a></h4>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ntpdate -u net.api.bz</span><br><span class=\"line\">#可以使用linux定时任务crond 定时同步</span><br></pre></td></tr></table></figure>\n<h4 id=\"查看linux内核版本命令（两种方法）：\">查看<a href=\"http://www.ha97.com/category/linux\">Linux</a>内核版本命令（两种方法）：<a title=\"#查看linux内核版本命令（两种方法）：\" href=\"#查看linux内核版本命令（两种方法）：\"></a></h4>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">1、cat /proc/version</span><br><span class=\"line\">2、uname -a</span><br></pre></td></tr></table></figure>\n<h4 id=\"tar-压缩/减压缩\">tar 压缩/减压缩<a title=\"#tar-压缩/减压缩\" href=\"#tar-压缩/减压缩\"></a></h4>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"># 压缩tar 如果压缩地址是全地址会将全路径压缩进压缩包中</span><br><span class=\"line\">cd $&#123;build_path&#125;</span><br><span class=\"line\">tar -zcvf $&#123;project_name&#125;.tar.gz $&#123;project_name&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"># 解压到go工作目录</span><br><span class=\"line\">tar -zxvf $&#123;boot_path&#125;&quot;/&quot;$&#123;project_name&#125;.tar.gz -C $&#123;deploy_path&#125;</span><br></pre></td></tr></table></figure>\n<h4 id=\"判断语句if\">判断语句if<a title=\"#判断语句if\" href=\"#判断语句if\"></a></h4>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">#Boolean类型判断</span><br><span class=\"line\">if test &quot;$is_build&quot; = &quot;false&quot; ; then</span><br><span class=\"line\">    echo &quot;构建已完成! $project_name&quot;</span><br><span class=\"line\">    #退出</span><br><span class=\"line\">    exit 0</span><br><span class=\"line\">fi</span><br><span class=\"line\"># 判断命令是否执行成功</span><br><span class=\"line\">    if [ $? -ne 0 ]; then</span><br><span class=\"line\">        echo &quot;build $&#123;project_name&#125; failed!&quot;</span><br><span class=\"line\">        exit 1</span><br><span class=\"line\">    else</span><br><span class=\"line\">        echo &quot;build $&#123;project_name&#125; succeed!&quot;</span><br><span class=\"line\">    fi</span><br><span class=\"line\">#判断文件夹是否需要创建</span><br><span class=\"line\">if [ ! -d &quot;$&#123;build_project_path&#125;&quot; ];then</span><br><span class=\"line\">    mkdir -p $&#123;build_project_path&#125;</span><br><span class=\"line\">else</span><br><span class=\"line\">    echo &quot;目录$&#123;build_project_path&#125;文件夹已经存在！&quot;</span><br><span class=\"line\">fi</span><br></pre></td></tr></table></figure>\n<h4 id=\"执行返回作为变量\">执行返回作为变量<a title=\"#执行返回作为变量\" href=\"#执行返回作为变量\"></a></h4>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">#清理镜像</span><br><span class=\"line\">echo &quot;docker images | grep $harbor_project/$project_name |grep none&quot;</span><br><span class=\"line\">images_none=`docker images | grep $harbor_project/$project_name |grep none`</span><br><span class=\"line\">if [ ! -n &quot;$images_none&quot; ]; then #判断是否为空</span><br><span class=\"line\">  echo &quot;images none IS NULL&quot;</span><br><span class=\"line\">else</span><br><span class=\"line\">  echo &quot;$images_none&quot;</span><br><span class=\"line\">  echo &quot;docker images | grep $harbor_project/$project_name |grep none |awk &#x27;&#123;print \\$3&#125;&#x27;|xargs docker rmi&quot;</span><br><span class=\"line\">  docker images | grep $harbor_project/$project_name |grep none |awk &quot;&#123;print \\$3&#125;&quot;|xargs docker rmi</span><br><span class=\"line\">fi</span><br></pre></td></tr></table></figure>\n<h4 id=\"shell脚本粘贴错行\">shell脚本粘贴错行<a title=\"#shell脚本粘贴错行\" href=\"#shell脚本粘贴错行\"></a></h4>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">vim xxx.sh</span><br><span class=\"line\">:set paste</span><br><span class=\"line\">#然后 i, 如何粘贴</span><br></pre></td></tr></table></figure>\n<h4 id=\"linux查询内核信息\">Linux查询内核信息<a title=\"#linux查询内核信息\" href=\"#linux查询内核信息\"></a></h4>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">uname -a</span><br></pre></td></tr></table></figure>\n<p>字符串包含</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">decollator1=&quot;===========&quot;</span><br><span class=\"line\">if [[ $str == *$decollator1* ]]</span><br><span class=\"line\">then</span><br><span class=\"line\">    echo &quot;包含&quot;</span><br><span class=\"line\">    continue</span><br><span class=\"line\">fi</span><br></pre></td></tr></table></figure>\n<p>数组定义</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">key=()</span><br><span class=\"line\">for v in $&#123;arrays[@]&#125;; do</span><br><span class=\"line\">  key[$&#123;#key[*]&#125;]=$&#123;v&#125;</span><br><span class=\"line\">done</span><br></pre></td></tr></table></figure>\n<p>字符串分割成数组</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">str=&quot;1111 3333 444&quot;</span><br><span class=\"line\">arrays=($&#123;str//\\n/&#125;)</span><br></pre></td></tr></table></figure>\n<p>定义参数输入调用函数</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">COMMAND=$&#123;1&#125;</span><br><span class=\"line\">help()&#123;</span><br><span class=\"line\">    #echo &quot;$&#123;0&#125; &lt;start|stop|restart|status&gt;&quot;</span><br><span class=\"line\">    #echo &quot;help&quot;</span><br><span class=\"line\">    echo &quot;$&#123;0&#125; &lt;report&gt;&quot;</span><br><span class=\"line\">    exit 1</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">case $&#123;COMMAND&#125; in</span><br><span class=\"line\">  (help)</span><br><span class=\"line\">    help</span><br><span class=\"line\">    ;;</span><br><span class=\"line\">  (report)</span><br><span class=\"line\">    report</span><br><span class=\"line\">    ;;</span><br><span class=\"line\">  (*)</span><br><span class=\"line\">    echo &quot;help $&#123;COMMAND&#125;&quot;</span><br><span class=\"line\">    help</span><br><span class=\"line\">    ;;</span><br><span class=\"line\">esac</span><br></pre></td></tr></table></figure>\n<h3 id=\"openssl命令\">openssl命令<a title=\"#openssl命令\" href=\"#openssl命令\"></a></h3>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sha256()&#123; # sha256sum 加密</span><br><span class=\"line\">\tstr=`echo -n &quot;$&#123;1&#125;&quot; | sha256sum`</span><br><span class=\"line\">\tstrArr=($str)</span><br><span class=\"line\">\tstr=$&#123;strArr[0]&#125;</span><br><span class=\"line\">\techo $str</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">hmac_hexkey()&#123; # hmac加密 hexkey是十六进制值</span><br><span class=\"line\">\tstr=`echo -n &quot;$&#123;2&#125;&quot; | openssl dgst -sha256 -mac HMAC -macopt hexkey:&quot;$&#123;1&#125;&quot;`</span><br><span class=\"line\">\tstrArr=($str)</span><br><span class=\"line\">\tstr=$&#123;strArr[1]&#125;</span><br><span class=\"line\">\techo &quot;$str&quot;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">hmac_key()&#123;# hmac加密 key常规数据</span><br><span class=\"line\">\tstr=`echo -n &quot;$&#123;2&#125;&quot; | openssl dgst -sha256 -mac HMAC -macopt key:&quot;$&#123;1&#125;&quot;`</span><br><span class=\"line\">\tstrArr=($str)</span><br><span class=\"line\">\tstr=$&#123;strArr[1]&#125;</span><br><span class=\"line\">\techo &quot;$str&quot;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n","next":{"title":"第一部分-初始go","link":"2022/02/15/go/go语言设计与实现/第一部分-初始go"},"plink":"https://liuzy.love/2022/04/04/shell/Shell常用命令/","toc":[{"id":"openssl命令","title":"openssl命令","index":"1"}]}